spring:
  application:
    name: taskolotl
  profiles:
    active: ${ENV:dev}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com

  #  cache:
  #    cache-names: [rate-limit-buckets]
  #    caffeine:
  #      spec: maximumSize=100000,expireAfterAccess=3600s

  jpa:
    defer-datasource-initialization: true
    open-in-view: false

  sql:
    init:
      mode: ALWAYS

#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,metrics

#bucket4j:
#  enabled: true
#  filters:
#    - cache-name: rate-limit-buckets
#      url: /api.*
#      strategy: first
#      http-response-body: '{"status": 429, "error": "Too Many Requests", "message": "Rate limit exceeded"}'
#      rate-limits:
#        - cache-key: "getRemoteAddr()"
#          bandwidths:
#            - capacity: 20
#              time: 1
#              unit: hours

springdoc:
  api-docs:
    resolve-schema-properties: false

app:
  version: @project.version@
  token:
    jwt-secret: ${JWT_SECRET}
    issuer: https://taskolotl.com
    access-token-expiration: ${ACCESS_TOKEN_EXPIRATION:900000}
    refresh-token-expiration: ${REFRESH_TOKEN_EXPIRATION:604800000}

logging:
  level:
    org.springframework.security: DEBUG
    com.saunderscox.taskolotl: DEBUG
